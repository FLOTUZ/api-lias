generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aseguradora {
  id         Int          @id @unique @default(autoincrement())
  nombre     String       @unique
  telefono   String
  expediente String       @db.VarChar(20)
  Asistencia Asistencia[]
  Ticket     Ticket[]
  createdAt  DateTime?    @default(now())
  updatedAt  DateTime?
}

model Asistencia {
  id            Int          @id @unique @default(autoincrement())
  nombre        String
  aseguradoraId Int?
  Aseguradora   Aseguradora? @relation(fields: [aseguradoraId], references: [id])
  Ticket        Ticket[]
  createdAt     DateTime?    @default(now())
  updatedAt     DateTime?
}

model Ciudad {
  id        Int       @id @unique @default(autoincrement())
  nombre    String    @db.VarChar(100)
  latitud   Float?
  longitud  Float?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  Tecnico   Tecnico[]
}

model Imagen {
  id                  Int                @id @unique @default(autoincrement())
  url                 String
  descripcion         String
  cotizacionTecnicoId Int?
  createdAt           DateTime?          @default(now())
  updatedAt           DateTime?          @updatedAt
  CotizacionTecnico   CotizacionTecnico? @relation(fields: [cotizacionTecnicoId], references: [id])
}

model Seguimiento {
  id                   Int       @id @unique @default(autoincrement())
  nombre_asesor_seguro String
  detalles             String
  fecha_seguimiento    DateTime
  ticketId             Int
  usuarioId            Int
  createdAt            DateTime? @default(now())
  updatedAt            DateTime? @updatedAt
  Ticket               Ticket    @relation(fields: [ticketId], references: [id])
  Usuario              Usuario   @relation(fields: [usuarioId], references: [id])
}

model Servicio {
  id        Int       @id @unique @default(autoincrement())
  nombre    String    @unique @db.VarChar(100)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  tipo      String
  Ticket    Ticket[]
  Tecnico   Tecnico[]
}

model Tecnico {
  id               Int        @id @unique @default(autoincrement())
  nombre           String     @db.VarChar(50)
  apellido_paterno String     @db.VarChar(50)
  apellido_materno String     @db.VarChar(50)
  calificacion     Decimal    @default(0.0) @db.Decimal(2, 1)
  telefono         String     @db.VarChar(10)
  usuarioId        Int        @unique
  ciudadId         Int
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @updatedAt
  Usuario          Usuario    @relation(fields: [usuarioId], references: [id])
  Ciudad           Ciudad[]
  Servicio         Servicio[]
}

model Ticket {
  id                        Int                @id @unique @default(autoincrement())
  num_expediente            String             @unique
  asistencia_vial           Boolean
  fecha_llamada             DateTime
  nombre_asesor_aseguradora String
  nombre_asesor_gpo_lias    String
  nombre_usuario_final      String
  titulo_ticket             String
  asistenciaId              Int
  aseguradoraId             Int
  problematica              String
  ciudad                    String
  colonia                   String
  calle                     String
  numero_domicilio          String
  banderazo                 Decimal?           @db.Money
  total_salida              Decimal            @db.Money
  cobertura                 Decimal            @db.Money
  cotizacion_gpo_lias       String?
  deducible                 Decimal            @db.Money
  kilometraje               Int
  total                     Decimal            @db.Money
  anticipo                  Decimal            @db.Money
  hora_cierre               DateTime?
  casetas                   Int
  costo_gpo_lias            Decimal            @db.Money
  estado                    String             @default("NUEVO")
  createdAt                 DateTime?          @default(now())
  updatedAt                 DateTime?          @updatedAt
  Aseguradora               Aseguradora        @relation(fields: [aseguradoraId], references: [id])
  Asistencia                Asistencia         @relation(fields: [asistenciaId], references: [id])
  Servicio                  Servicio[]
  Seguimiento               Seguimiento[]
  Usuario                   Usuario[]
  CotizacionTecnico         CotizacionTecnico?
}

model CotizacionTecnico {
  id                  Int       @id @unique @default(autoincrement())
  solucion_tecnico    String
  fecha_contacto      DateTime
  costo_mano_obra     Decimal   @db.Money
  costo_materiales    Decimal   @db.Money
  total_cotizacion    Decimal   @db.Money
  ticketId            Int       @unique
  createdAt           DateTime? @default(now())
  updatedAt           DateTime? @updatedAt
  Ticket              Ticket    @relation(fields: [ticketId], references: [id])
  ImagenJustificacion Imagen[]
}

model AcuerdoConformidad {
  id                         Int           @id @unique @default(autoincrement())
  fecha_acuerdo              DateTime
  descripcion_problema       String
  direccion                  String
  observaciones              String?
  actividades_realizadas     String
  hora_recepcion_servicio    DateTime
  hora_llegada_servicio      DateTime
  hora_finalizacion_servicio DateTime
  acuerdo_firmado            String?
  usuarioFinalId             Int?
  createdAt                  DateTime?     @default(now())
  updatedAt                  DateTime?     @updatedAt
  UsuarioFinal               UsuarioFinal? @relation(fields: [usuarioFinalId], references: [id])
}

model Usuario {
  id          Int           @id @unique @default(autoincrement())
  usuario     String        @unique @db.VarChar(20)
  email       String        @unique @db.VarChar(100)
  password    String
  inactivo    Boolean?      @default(false)
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime?     @updatedAt
  rol         String        @default("USUARIO")
  Seguimiento Seguimiento[]
  Tecnico     Tecnico?
  Ticket      Ticket[]
}

model UsuarioFinal {
  id                 Int                  @id @unique @default(autoincrement())
  nombre             String               @db.VarChar(50)
  apellido_paterno   String               @db.VarChar(50)
  apellido_materno   String               @db.VarChar(50)
  correo             String?              @db.VarChar(100)
  telefono           String               @db.VarChar(10)
  AcuerdoConformidad AcuerdoConformidad[]
  createdAt          DateTime?            @default(now())
  updatedAt          DateTime?            @updatedAt
}
